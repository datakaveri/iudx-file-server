<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>datakaveri.org</groupId>
	<artifactId>iudx.file.server</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>iudx-file-server</name>

	<properties>
		<vertx.version>4.0.3</vertx.version>
		<openjdk.version>11</openjdk.version>
		<hazelcast.version>4.0.2</hazelcast.version>
		<micrometer.version>1.6.2</micrometer.version>
		<curator.version>5.1.0</curator.version>
		<maven-checkstyle-plugin.version>3.1.2</maven-checkstyle-plugin.version>
		<junit-jupiter-api.version>5.7.2</junit-jupiter-api.version>
		<junit-jupiter-params.version>5.7.2</junit-jupiter-params.version>
		<junit-jupiter-engine.version>5.7.2</junit-jupiter-engine.version>
		<slf4j-api.version>1.7.30</slf4j-api.version>
		<slf4j-log4j12.version>1.7.30</slf4j-log4j12.version>
		<testcontainers.version>1.15.3</testcontainers.version>
		<testcontainer-elastic.version>1.15.3</testcontainer-elastic.version>
		<log4j-core.version>2.17.0</log4j-core.version>
		<disruptor.version>3.4.4</disruptor.version>
		<junit-jupiter.version>1.15.3</junit-jupiter.version>
		<elasticsearch-rest-client.version>7.12.1</elasticsearch-rest-client.version>
		<elasticsearch-rest-high-level-client.version>7.12.1</elasticsearch-rest-high-level-client.version>
		<jacoco-maven-plugin.version>0.8.7</jacoco-maven-plugin.version>
		<maven-checkstyle-plugin.version>3.1.2</maven-checkstyle-plugin.version>
		<checkstyle.version>8.42</checkstyle.version>
		<maven-shade-plugin.version>3.2.4</maven-shade-plugin.version>
		<maven-javadoc-plugin.version>3.2.0</maven-javadoc-plugin.version>
		<exec-maven-plugin.version>3.0.0</exec-maven-plugin.version>
		<maven-surefire-plugin.version>3.0.0-M5</maven-surefire-plugin.version>
		<maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
		<maven-pmd-plugin.version>3.14.0</maven-pmd-plugin.version>
		<maven-checkstyle-plugin.version>3.1.2</maven-checkstyle-plugin.version>
		<maven-surefire-report-plugin.version>3.0.0-M5</maven-surefire-report-plugin.version>

		<exec.mainClass>iudx.file.server.deploy.Deployer</exec.mainClass>
		<exec.mainClassDev>iudx.file.server.deploy.DeployerDev</exec.mainClassDev>
		<config-dev.file>config-dev.json</config-dev.file>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>io.vertx</groupId>
				<artifactId>vertx-stack-depchain</artifactId>
				<version>${vertx.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-codegen</artifactId>
			<classifier>processor</classifier>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-core</artifactId>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-web</artifactId>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-service-proxy</artifactId>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-web-client</artifactId>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-hazelcast</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-checkstyle-plugin</artifactId>
			<version>${maven-checkstyle-plugin.version}</version>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>${junit-jupiter-api.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-params</artifactId>
			<version>${junit-jupiter-params.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>${junit-jupiter-engine.version}</version>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-junit5</artifactId>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-unit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j-api.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${slf4j-log4j12.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>${log4j-core.version}</version>
		</dependency>
		<dependency>
			<groupId>com.lmax</groupId>
			<artifactId>disruptor</artifactId>
			<version>${disruptor.version}</version>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-micrometer-metrics</artifactId>
		</dependency>
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-core</artifactId>
			<version>${micrometer.version}</version>
		</dependency>
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-prometheus</artifactId>
			<version>${micrometer.version}</version>
		</dependency>
		<dependency>
			<groupId>com.hazelcast</groupId>
			<artifactId>hazelcast-zookeeper</artifactId>
			<version>${hazelcast.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.curator</groupId>
			<artifactId>curator-x-discovery</artifactId>
			<version>${curator.version}</version>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>testcontainers</artifactId>
			<version>${testcontainers.version}</version>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>elasticsearch</artifactId>
			<version>${testcontainer-elastic.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>junit-jupiter</artifactId>
			<version>${junit-jupiter.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-web-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>org.elasticsearch.client</groupId>
			<artifactId>elasticsearch-rest-client</artifactId>
			<version>${elasticsearch-rest-client.version}</version>
		</dependency>
		<dependency>
			<groupId>org.elasticsearch.client</groupId>
			<artifactId>elasticsearch-rest-high-level-client</artifactId>
			<version>${elasticsearch-rest-high-level-client.version}</version>
		</dependency>

		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-auth-jwt</artifactId>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>3.11.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
			<version>3.11.1</version>
			<scope>test</scope>
		</dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-pg-client</artifactId>
            <version>4.0.3</version>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-rabbitmq-client</artifactId>
            <version>4.0.3</version>
        </dependency>
    </dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco-maven-plugin.version}</version>
				<executions>
					<execution>
						<id>prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>report</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<dataFile>target/jacoco.exec</dataFile>
							<outputDirectory>target/jacoco-site</outputDirectory>
						</configuration>
					</execution>
				</executions>
				<configuration>
					<systemPropertyVariables>
						<jacoco-agent.destfile>target/jacoco.exec</jacoco-agent.destfile>
					</systemPropertyVariables>
					<excludes>
						<!-- classes are excluded since they are not testable or don't add 
							any value if test cases are written. -->
						<!-- ApiServerVerticle testing is covered in integration for now. -->
						<exclude>iudx/file/server/apiserver/FileServerVerticle.class</exclude>
						<exclude>iudx/file/server/apiserver/FileServerVerticle**</exclude>
						<!-- service proxy interfaces -->
						<exclude>iudx/file/server/authenticator/AuthenticationService.class</exclude>
						<exclude>iudx/file/server/database/DatabaseService.class</exclude>
						<!-- generated classes -->
						<exclude>**/JwtDataConverter.class</exclude>
						<exclude>**/*VertxEBProxy.class</exclude>
						<exclude>**/Constants.class</exclude>
						<exclude>**/*VertxProxyHandler.class</exclude>
						<exclude>**/*Verticle.class</exclude>
						<exclude>iudx/file/server/deploy/**</exclude>
					</excludes>
					<limits>
						<limit>
							<counter>LINE</counter>
							<value>COVEREDRATIO</value>
							<minimum>80%</minimum>
						</limit>
					</limits>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${maven-checkstyle-plugin.version}</version>
				<dependencies>
					<dependency>
						<groupId>com.puppycrawl.tools</groupId>
						<artifactId>checkstyle</artifactId>
						<version>${checkstyle.version}</version>
					</dependency>
				</dependencies>
				<configuration>
					<!-- <violationSeverity>warning</violationSeverity> -->
					<consoleOutput>true</consoleOutput>
					<encoding>UTF-8</encoding>
					<configLocation>google_checks.xml</configLocation>
					<module name="LineLength">
						<property name="max" value="120" />
					</module>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>${maven-shade-plugin.version}</version>
				<executions>
					<execution>
						<id>dev</id>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<filters>
								<filter>
									<artifact>*:*</artifact>
									<excludes>
										<exclude>module-info.class</exclude>
										<exclude>META-INF/maven/**</exclude>
										<exclude>META-INF/*.RSA</exclude>
										<exclude>META-INF/*.DSA</exclude>
										<exclude>META-INF/*.SF</exclude>
									</excludes>
								</filter>
							</filters>
							<transformers>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<manifestEntries>
										<Main-Class>${exec.mainClassDev}</Main-Class>
									</manifestEntries>
								</transformer>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/services/io.vertx.core.spi.VerticleFactory
									</resource>
									<resource>META-INF/services/io.vertx.core.spi.VertxServiceProvider
									</resource>
								</transformer>
							</transformers>
							<artifactSet></artifactSet>
							<outputFile>${project.build.directory}/${project.artifactId}-dev-${project.version}-fat.jar
							</outputFile>
						</configuration>
					</execution>
					<execution>
						<id>cluster</id>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<filters>
								<filter>
									<artifact>*:*</artifact>
									<excludes>
										<exclude>module-info.class</exclude>
										<exclude>META-INF/maven/**</exclude>
										<exclude>META-INF/*.RSA</exclude>
										<exclude>META-INF/*.DSA</exclude>
										<exclude>META-INF/*.SF</exclude>
									</excludes>
								</filter>
							</filters>
							<transformers>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<manifestEntries>
										<Main-Class>${exec.mainClass}</Main-Class>
									</manifestEntries>
								</transformer>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/services/io.vertx.core.spi.VerticleFactory
									</resource>
									<resource>META-INF/services/io.vertx.core.spi.VertxServiceProvider
									</resource>
								</transformer>
							</transformers>
							<artifactSet></artifactSet>
							<outputFile>${project.build.directory}/${project.artifactId}-cluster-${project.version}-fat.jar
							</outputFile>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${maven-javadoc-plugin.version}</version>
				<configuration>
					<source>${openjdk.version}</source>
					<target>${openjdk.version}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>${exec-maven-plugin.version}</version>
				<executions>
					<execution>
						<id>file-server</id>
						<configuration>
							<mainClass>iudx.file.server.deploy.DeployerDev </mainClass>
							<arguments>
								<argument>-jar</argument>
								<argument>{project.build.directory}/${project.artifactId}-dev-${project.version}-fat.jar
								</argument>
								<argument>-c</argument>
								<argument>./secrets/all-verticles-configs/${config-dev.file}</argument>
							</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven-surefire-plugin.version}</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<release>${openjdk.version}</release>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>${maven-pmd-plugin.version}</version>
				<configuration>
					<targetJdk>${openjdk.version}</targetJdk>
					<rulesets>
						<ruleset>/rulesets/java/braces.xml</ruleset>
						<ruleset>/rulesets/java/naming.xml</ruleset>
						<ruleset>/rulesets/java/imports.xml</ruleset>
						<ruleset>/rulesets/java/unnecessary.xml</ruleset>
						<ruleset>/rulesets/java/unusedcode.xml</ruleset>
					</rulesets>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${maven-checkstyle-plugin.version}</version>
				<configuration>
					<consoleOutput>true</consoleOutput>
					<encoding>UTF-8</encoding>
					<configLocation>google_checks.xml</configLocation>
					<failOnViolation>false</failOnViolation>
				</configuration>

				<reportSets>
					<reportSet>
						<reports>
							<report>checkstyle</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>${maven-surefire-report-plugin.version}</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>report-only</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>

		</plugins>
	</reporting>
</project>
